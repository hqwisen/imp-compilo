apply plugin: 'java'
apply plugin: 'application'

sourceCompatibility = 1.8
targetCompatibility = 1.8

sourceSets {
    main {
        java {
            srcDir 'more/src'
        }
        resources {
            srcDir 'more/src/resources'
        }
    }
    test {
        java {
            srcDir 'more/tests'
        }
    }
}

task scannerJar(type: Jar) {
    from(sourceSets.main.output)
    manifest {
        attributes 'Implementation-Title': 'ImpCompilo Scanner',
                'Implementation-Version': '',
                'Main-Class': 'Scanner'
    }
    baseName 'scanner'
    destinationDir file('dist/')
}

task parserJar(type: Jar) {
    from(sourceSets.main.output)
    manifest {
        attributes 'Implementation-Title': 'ImpCompilo Parser',
                'Implementation-Version': '',
                'Main-Class': 'LL1Parser'
    }
    baseName 'parser'
    destinationDir file('dist/')
}

task generateScanner {
    javaexec {
        main='-jar';
        args = ['dist/lib/jflex.jar', 'more/src/LexicalAnalyzer.flex']
    }
}

task generateScannerJar (dependsOn: [generateScanner, scannerJar])

task generateParserJar (dependsOn: [generateScanner, parserJar])

task scanner (dependsOn: generateScannerJar) {
    doLast{
        javaexec {
            main='-jar';
            args = ['dist/scanner.jar', project.input]
        }
    }
}

task parser (dependsOn: generateParserJar) {
    doLast{
        javaexec {
            main='-jar';
            args = ['dist/parser.jar', project.input]
        }
    }
}

task generateDoc (type: Javadoc){
    source = sourceSets.main.allJava
    destinationDir file('doc/javadoc')
}

repositories{
    mavenCentral()
}

dependencies {
    // compile fileTree(dir: 'dist/lib', include: ['*.jar'])
    testCompile group: 'junit', name: 'junit', version: '4.+'
}
